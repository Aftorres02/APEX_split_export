[
  {
    "id":"386713215414645103"
   ,"Identification":{
      "Name":"Avatar"
    }
  }
 ,{
    "id":"386727453865645114"
   ,"Identification":{
      "Name":"Badge"
    }
  }
 ,{
    "id":"386736751381645120"
   ,"Identification":{
      "Name":"Comments"
    }
  }
 ,{
    "id":"386753571692645133"
   ,"Identification":{
      "Name":"Button"
    }
  }
 ,{
    "id":"386757963868645137"
   ,"Identification":{
      "Name":"Timeline"
    }
  }
 ,{
    "id":"386784018446645155"
   ,"Identification":{
      "Name":"Content Row"
    }
  }
 ,{
    "id":"386821196890645182"
   ,"Identification":{
      "Name":"Media List"
    }
  }
 ,{
    "id":"14863995939543489978"
   ,"Identification":{
      "Name":"Translated Message"
    }
   ,"Source":{
      "PL\/SQL Code":"function render (\n    p_region              in apex_plugin.t_region,\n    p_plugin              in apex_plugin.t_plugin,\n    p_is_printer_friendly in boolean )\n    return apex_plugin.t_region_render_result\nis\n    c_message     constant varchar2(255) := p_region.attribute_01;\n    c_add_p_tags  constant varchar2(1) := p_region.attribute_12;\n\n    type subs_t is varray(10) of varchar2(4000);\n    type colnos_t is varray(10) of pls_integer;\n\n    c_subs_columns constant subs_t :=\n        subs_t (\n            p_region.attribute_02,\n            p_region.attribute_03,\n            p_region.attribute_04,\n            p_region.attribute_05,\n            p_region.attribute_06,\n            p_region.attribute_07,\n            p_region.attribute_08,\n            p_region.attribute_09,\n            p_region.attribute_10,\n            p_region.attribute_11\n        );\n\n    l_column_value_list apex_plugin_util.t_column_value_list2;\n    l_subs_column_nos colnos_t := colnos_t( null, null, null, null, null, null, null, null, null, null );\n\n    l_subs subs_t := subs_t( null, null, null, null, null,\n                             null, null, null, null, null );\n    l_label varchar2(50);\n    l_message clob;\nbegin\n    if p_region.source is not null then\n        -- Read the data based on the region source query\n        l_column_value_list := apex_plugin_util.get_data2 (\n                                   p_sql_statement  =\u003E p_region.source,\n                                   p_min_columns    =\u003E 1,\n                                   p_max_columns    =\u003E null,\n                                   p_component_name =\u003E p_region.name );\n\n        -- Get the actual column# for faster access and also verify that the data type\n        -- of the column matches with what we are looking for\n        for i in 0..9 loop\n            l_label := \u0027Substitution Column \u0027\n                        ||to_char(i)||\u0027 (%\u0027||to_char(i)||\u0027)\u0027;\n            l_subs_column_nos(i+1) := apex_plugin_util.get_column_no (\n                                        p_attribute_label   =\u003E l_label,\n                                        p_column_alias      =\u003E c_subs_columns(i+1),\n                                        p_column_value_list =\u003E l_column_value_list,\n                                        p_is_required       =\u003E false,\n                                        p_data_type         =\u003E apex_plugin_util.c_data_type_varchar2 );\n        end loop;\n\n        -- Set the column values of the first row so that apex_plugin_util.replace_substitutions\n        -- can do substitutions for columns contained in the region source query.\n        apex_plugin_util.set_component_values (\n            p_column_value_list =\u003E l_column_value_list,\n            p_row_num           =\u003E 1 );\n\n        -- get the substitution values\n        for i in 0..9 loop\n            if l_subs_column_nos(i+1) is not null then\n                l_subs(i+1) := apex_plugin_util.escape (\n                                apex_plugin_util.get_value_as_varchar2 (\n                                    p_data_type =\u003E l_column_value_list(l_subs_column_nos(i+1)).data_type,\n                                    p_value     =\u003E l_column_value_list(l_subs_column_nos(i+1)).value_list(1) ),\n                                p_region.escape_output );\n            end if;\n        end loop;\n    end if;\n\n    l_message := apex_application.do_substitutions(\n        apex_lang.message( p_name =\u003E c_message,\n                           p0     =\u003E l_subs(1),\n                           p1     =\u003E l_subs(2),\n                           p2     =\u003E l_subs(3),\n                           p3     =\u003E l_subs(4),\n                           p4     =\u003E l_subs(5),\n                           p5     =\u003E l_subs(6),\n                           p6     =\u003E l_subs(7),\n                           p7     =\u003E l_subs(8),\n                           p8     =\u003E l_subs(9),\n                           p9     =\u003E l_subs(10)\n                      )\n        );\n    if c_add_p_tags = \u0027Y\u0027 and instr( l_message, \u0027\u003Cp\u0027 ) = 0 then\n        l_message := \u0027\u003Cp\u003E\u0027||l_message||\u0027\u003C\/p\u003E\u0027;\n    end if;\n    sys.htp.p(l_message);\n    return null;\nend;"
    }
  }
 ,{
    "id":"14891235386276524280"
   ,"Identification":{
      "Name":"ACL Status"
    }
   ,"Source":{
      "PL\/SQL Code":"function acl_status (   p_region              in apex_plugin.t_region,\n                        p_plugin              in apex_plugin.t_plugin,\n                        p_is_printer_friendly in boolean ) return apex_plugin.t_region_render_result is\n    l_retval         apex_plugin.t_region_render_result;\n    --\n    c_config_page constant varchar2(30)   := p_region.attribute_01;\n    c_acl_page    constant varchar2(30)   := p_region.attribute_02;\n    c_admin_alias constant varchar2(255)  := p_region.attribute_03;\n    c_cont_alias  constant varchar2(255)  := p_region.attribute_04;\n    c_read_alias  constant varchar2(255)  := p_region.attribute_05;\n    c_scope_pref  constant varchar2(4000) := p_region.attribute_06;\n    c_acl_status  constant varchar2(4000) := p_region.attribute_07;\n    --\n    l_app_id            varchar2(255) := :APP_ID;\n    l_session_id        varchar2(255) := :APP_SESSION;\n    -- TODO: Make this handle generic ACL levels.\n    l_column_value_list apex_plugin_util.t_column_value_list2;\n    l_admin_column_number pls_integer;\n    l_admin_count         number := null;\n    l_cont_column_number  pls_integer;\n    l_cont_count          number := null;\n    l_read_column_number  pls_integer;\n    l_read_count          number := null;\n    --\n    l_scope             varchar2(255);\n    l_acl_mode          varchar2(255);\n    l_acl_enabled       varchar2(1) := \u0027N\u0027;\nbegin\n    l_column_value_list := apex_plugin_util.get_data2(\n        p_sql_statement  =\u003E p_region.source,\n        p_min_columns    =\u003E 3,\n        p_max_columns    =\u003E null,\n        p_component_name =\u003E p_region.name\n    );\n\n    l_admin_column_number := apex_plugin_util.get_column_no (\n        p_attribute_label   =\u003E \u0027ADMINCOUNT\u0027,\n        p_column_alias      =\u003E c_admin_alias,\n        p_column_value_list =\u003E l_column_value_list,\n        p_is_required       =\u003E true,\n        p_data_type         =\u003E apex_plugin_util.c_data_type_number\n    );\n    l_cont_column_number := apex_plugin_util.get_column_no (\n        p_attribute_label   =\u003E \u0027CONTCOUNT\u0027,\n        p_column_alias      =\u003E c_cont_alias,\n        p_column_value_list =\u003E l_column_value_list,\n        p_is_required       =\u003E true,\n        p_data_type         =\u003E apex_plugin_util.c_data_type_number\n    );\n    l_read_column_number := apex_plugin_util.get_column_no (\n        p_attribute_label   =\u003E \u0027READCOUNT\u0027,\n        p_column_alias      =\u003E c_read_alias,\n        p_column_value_list =\u003E l_column_value_list,\n        p_is_required       =\u003E true,\n        p_data_type         =\u003E apex_plugin_util.c_data_type_number\n    );\n\n    l_scope := apex_plugin_util.get_plsql_expression_result( p_plsql_expression =\u003E c_scope_pref );\n    l_acl_enabled := apex_plugin_util.get_plsql_expression_result( p_plsql_expression =\u003E c_acl_status );\n\n    for l_row_number in 1 .. l_column_value_list(1).value_list.count loop\n        l_admin_count := l_column_value_list(l_admin_column_number).value_list(l_row_number).number_value;\n        l_cont_count  := l_column_value_list(l_cont_column_number).value_list(l_row_number).number_value;\n        l_read_count  := l_column_value_list(l_read_column_number).value_list(l_row_number).number_value;\n    end loop;\n\n    if l_acl_enabled = \u0027N\u0027 then\n        l_acl_mode := \u0027Disabled\u0027;\n    else\n        l_acl_mode := \u0027Enabled\u0027;\n    end if;\n\n    sys.htp.p(\u0027\u003Cdiv class=\"t-ConfigPanel\"\u003E\u0027);\n    sys.htp.p(\u0027  \u003Cdiv class=\"t-ConfigPanel-about\"\u003E\u0027);\n        if l_acl_mode = \u0027Disabled\u0027 then\n           sys.htp.p(apex_lang.message(\u0027ACL_DISABLED\u0027));\n        else\n           if l_scope = \u0027ACL_ONLY\u0027 then sys.htp.p(apex_lang.message(\u0027ACL_ENABLED\u0027)); end if;\n           if l_scope = \u0027PUBLIC_CONTRIBUTE\u0027 then sys.htp.p(apex_lang.message(\u0027ACL_PUBLIC_CONTRIBUTE\u0027)); end if;\n           if l_scope = \u0027PUBLIC_READONLY\u0027 then sys.htp.p(apex_lang.message(\u0027ACL_PUBLIC_READONLY\u0027)); end if;\n        end if;\n    sys.htp.p(\u0027  \u003C\/div\u003E\u0027);\n    sys.htp.p(\u0027  \u003Cdiv class=\"t-ConfigPanel-body\"\u003E\u0027);\n    sys.htp.p(\u0027    \u003Cdiv class=\"t-ConfigPanel-main\"\u003E\u0027);\n    sys.htp.p(\u0027      \u003Cspan class=\"t-ConfigPanel-icon a-Icon\u0027);\n      if l_acl_mode = \u0027Enabled\u0027 then\n        sys.htp.prn(\u0027is-enabled\u0027);\n      else\n        sys.htp.prn(\u0027is-disabled\u0027);\n      end if;\n    sys.htp.p(\u0027\"\u003E\u003C\/span\u003E\u0027);\n    sys.htp.p(\u0027      \u003Cspan class=\"t-ConfigPanel-setting\"\u003EAccess Control\u003C\/span\u003E\u0027);\n        if l_acl_mode = \u0027Disabled\u0027 then\n            sys.htp.p(\u0027      \u003Cspan class=\"t-ConfigPanel-status\"\u003EDisabled\u003C\/span\u003E\u0027);\n            sys.htp.p(\u0027      \u003Cspan class=\"t-ConfigPanel-actions\"\u003E\u0027);\n            sys.htp.p(\u0027        \u003Cbutton class=\"t-Button t-Button--small\" onclick=\"openModal(\u0027\u0027confirmEnableACL\u0027\u0027);\" type=\"button\"\u003EEnable Access Control\u003C\/button\u003E\u0027);\n            sys.htp.p(\u0027      \u003C\/span\u003E\u0027);\n        else\n            sys.htp.p(\u0027      \u003Cspan class=\"t-ConfigPanel-status\"\u003EEnabled\u003C\/span\u003E\u0027);\n            sys.htp.p(\u0027      \u003Cspan class=\"t-ConfigPanel-actions\"\u003E\u0027);\n            sys.htp.p(\u0027        \u003Cbutton class=\"t-Button t-Button--small\" onclick=\"apex.navigation.redirect(\u0027\u0027\u0027||apex_util.prepare_url(\u0027f?p=\u0027||l_app_id||\u0027:\u0027||c_config_page||\u0027:\u0027||l_session_id)||\u0027\u0027\u0027);\" type=\"button\"\u003EConfigure\u003C\/button\u003E\u0027);\n            sys.htp.p(\u0027      \u003C\/span\u003E\u0027);\n        end if;\n    sys.htp.p(\u0027      \u003C\/span\u003E\u0027);\n    sys.htp.p(\u0027    \u003C\/div\u003E\u0027);\n    sys.htp.p(\u0027    \u003Cdiv class=\"t-ConfigPanel-list\"\u003E\u0027);\n    sys.htp.p(\u0027      \u003Cul class=\"t-ConfigPanel-attrs\"\u003E\u0027);\n    sys.htp.p(\u0027        \u003Cli class=\"t-ConfigPanel-attr\"\u003E\u0027);\n    sys.htp.p(\u0027          \u003Ca href=\"\u0027||apex_util.prepare_url(\u0027f?p=\u0027||l_app_id||\u0027:\u0027||c_acl_page||\u0027:\u0027||l_session_id|| \u0027:::\u0027||c_acl_page||\u0027,RIR:IREQ_ACCESS_LEVEL_ID:Administrator\u0027)||\u0027\" class=\"t-ConfigPanel-attrLink\"\u003E\u0027);\n    sys.htp.p(\u0027            \u003Cspan class=\"t-ConfigPanel-attrLabel\"\u003EAdministrators\u003C\/span\u003E\u0027);\n    sys.htp.p(\u0027            \u003Cspan class=\"t-ConfigPanel-attrValue\"\u003E\u0027);\n        if l_acl_mode = \u0027Disabled\u0027 then\n            sys.htp.p(apex_escape.html(apex_lang.message(\u0027ANY_AUTHENTICATED_USER\u0027)));\n        else\n            sys.htp.p(to_char(l_admin_count,\u0027999G999G990\u0027));\n        end if;\n    sys.htp.p(\u0027            \u003C\/span\u003E\u0027);\n    sys.htp.p(\u0027          \u003C\/a\u003E\u0027);\n    sys.htp.p(\u0027        \u003C\/li\u003E\u0027);\n\n    sys.htp.p(\u0027        \u003Cli class=\"t-ConfigPanel-attr\"\u003E\u0027);\n    sys.htp.p(\u0027          \u003Ca href=\"\u0027||apex_util.prepare_url(\u0027f?p=\u0027||l_app_id||\u0027:\u0027||c_acl_page||\u0027:\u0027||l_session_id||\u0027:::\u0027||c_acl_page||\u0027,RIR:IREQ_ACCESS_LEVEL_ID:Contributor\u0027)||\u0027\" class=\"t-ConfigPanel-attrLink\"\u003E\u0027);\n    sys.htp.p(\u0027            \u003Cspan class=\"t-ConfigPanel-attrLabel\"\u003EContributors\u003C\/span\u003E\u0027);\n    sys.htp.p(\u0027            \u003Cspan class=\"t-ConfigPanel-attrValue\"\u003E\u0027);\n        if l_acl_mode = \u0027Disabled\u0027 then \n            sys.htp.p(apex_escape.html(apex_lang.message(\u0027ANY_AUTHENTICATED_USER\u0027)));\n        elsif l_scope = \u0027ACL_ONLY\u0027 or l_scope = \u0027PUBLIC_READONLY\u0027 then\n            sys.htp.p(to_char(nvl(l_cont_count,0),\u0027999G999G990\u0027));\n        else\n            sys.htp.p(apex_escape.html(apex_lang.message(\u0027ANY_AUTHENTICATED_USER\u0027)));\n        end if;\n    sys.htp.p(\u0027            \u003C\/span\u003E\u0027);\n    sys.htp.p(\u0027          \u003C\/a\u003E\u0027);\n    sys.htp.p(\u0027        \u003C\/li\u003E\u0027);\n\n    sys.htp.p(\u0027        \u003Cli class=\"t-ConfigPanel-attr\"\u003E\u0027);\n    sys.htp.p(\u0027          \u003Ca href=\"\u0027||apex_util.prepare_url(\u0027f?p=\u0027||l_app_id||\u0027:\u0027||c_acl_page||\u0027:\u0027||l_session_id||\u0027:::\u0027||c_acl_page||\u0027,RIR:IREQ_ACCESS_LEVEL_ID:Reader\u0027)||\u0027\" class=\"t-ConfigPanel-attrLink\"\u003E\u0027);\n    sys.htp.p(\u0027            \u003Cspan class=\"t-ConfigPanel-attrLabel\"\u003EReaders\u003C\/span\u003E\u0027);\n    sys.htp.p(\u0027            \u003Cspan class=\"t-ConfigPanel-attrValue\"\u003E\u0027);\n    sys.htp.p(  case\n                    when l_acl_mode = \u0027Disabled\u0027 then \n                        apex_escape.html(apex_lang.message(\u0027ANY_AUTHENTICATED_USER\u0027))\n                    when l_scope = \u0027ACL_ONLY\u0027 then\n                        to_char(nvl(l_read_count,0),\u0027999G999G990\u0027)\n                    when l_scope = \u0027PUBLIC_READONLY\u0027 or l_scope = \u0027PUBLIC_CONTRIBUTE\u0027 then\n                        apex_escape.html(apex_lang.message(\u0027ANY_AUTHENTICATED_USER\u0027))\n                    else\n                        to_char(nvl(l_read_count,0),\u0027999G999G990\u0027)\n                end );\n    sys.htp.p(\u0027            \u003C\/span\u003E\u0027);\n    sys.htp.p(\u0027          \u003C\/a\u003E\u0027);\n    sys.htp.p(\u0027        \u003C\/li\u003E\u0027);\n\n    sys.htp.p(\u0027      \u003C\/ul\u003E\u0027);\n    sys.htp.p(\u0027    \u003C\/div\u003E\u0027);\n    sys.htp.p(\u0027  \u003C\/div\u003E\u0027);\n    sys.htp.p(\u0027\u003C\/div\u003E\u0027);\n\n    return l_retval;    \nend;"
    }
  }
 ,{
    "id":"14891238424572524285"
   ,"Identification":{
      "Name":"Authorization Administration"
    }
   ,"Source":{
      "PL\/SQL Code":"function auth_admin (   p_region              in apex_plugin.t_region,\n                        p_plugin              in apex_plugin.t_plugin,\n                        p_is_printer_friendly in boolean ) return apex_plugin.t_region_render_result is\n    l_retval         apex_plugin.t_region_render_result;\n    --\n    c_page_report_page constant number        := p_region.attribute_01;\n    c_public_pages_msg constant varchar2(255) := apex_escape.html(p_region.attribute_02);\n    c_auth_pages_msg   constant varchar2(255) := apex_escape.html(p_region.attribute_03);\n    c_custom_auth_msg  constant varchar2(255) := apex_escape.html(p_region.attribute_04);\n\n    l_app_session     varchar2(255) := :APP_SESSION;\n    l_app_id          number := :APP_ID;\n    l_cnt             number := 0;\n    l_auth_scheme     number := 0;\n    l_auth_required   number := 0;\n    l_auth_scheme_name     varchar2(255);\nbegin\n    for c1 in ( select count(*) c,\n                    sum(decode(authorization_scheme,null,0,1)) auth_scheme,\n                    sum(decode(page_requires_authentication,\u0027Yes\u0027,1,0)) auth_required\n                from apex_application_pages\n                where application_id =  l_app_id\n                    and page_function != \u0027Global Page\u0027 ) loop\n        l_cnt := c1.c;\n        l_auth_scheme := c1.auth_scheme;\n        l_auth_required := c1.auth_required;\n    end loop;\n\n    for c1 in ( select authentication_scheme \n                from apex_applications \n                where application_id = l_app_id ) loop\n        l_auth_scheme_name := c1.authentication_scheme;\n    end loop;\n\n    sys.htp.p(\u0027\u003Cdiv class=\"container\"\u003E\u0027);\n    sys.htp.p(\u0027\u003Cdiv class=\"row\"\u003E\u0027);\n    sys.htp.p(\u0027\u003Cdiv class=\"col col-12 \"\u003E\u0027);\n    sys.htp.p(\u0027\u003Cdiv class=\"t-ConfigPanel\"\u003E\u0027);\n    sys.htp.p(\u0027\u003Cdiv class=\"t-ConfigPanel-body\"\u003E\u0027);\n    sys.htp.p(\u0027\u003Cdiv class=\"t-ConfigPanel-main\"\u003E\u0027);\n    sys.htp.p(\u0027\u003Cspan class=\"t-ConfigPanel-icon a-Icon auth-scheme\"\u003E\u003C\/span\u003E\u0027);\n    sys.htp.p(\u0027\u003Cspan class=\"t-ConfigPanel-setting\"\u003EAuthentication Scheme\u003C\/span\u003E\u0027);\n    sys.htp.p(\u0027\u003Cspan class=\"t-ConfigPanel-status\"\u003E\u0027||apex_escape.html(l_auth_scheme_name)||\u0027\u003C\/span\u003E\u0027);\n    sys.htp.p(\u0027\u003C\/div\u003E\u0027);\n    sys.htp.p(\u0027\u003Cdiv class=\"t-ConfigPanel-list\"\u003E\u0027);\n    sys.htp.p(\u0027\u003Cul class=\"t-ConfigPanel-attrs\"\u003E\u0027);\n    sys.htp.p(\u0027\u003Cli class=\"t-ConfigPanel-attr\"\u003E\u0027);\n    sys.htp.p(\u0027\u003Ca href=\"\u0027\n        ||case when c_page_report_page is not null then\n                apex_util.prepare_url(\u0027f?p=\u0027||l_app_id||\u0027:\u0027||c_page_report_page||\u0027:\u0027||l_app_session\n                                     ||\u0027:::\u0027||c_page_report_page||\u0027,RIR:IREQ_REQUIRES_AUTH:No\u0027)\n            else\n                \u0027#\u0027\n        end\n        ||\u0027\" class=\"t-ConfigPanel-attrLink\"\u003E\u0027);\n    sys.htp.p(\u0027\u003Cspan class=\"t-ConfigPanel-attrLabel\"\u003E\u0027||c_public_pages_msg||\u0027\u003C\/span\u003E\u0027);\n    sys.htp.p(\u0027\u003Cspan class=\"t-ConfigPanel-attrValue\"\u003E\u0027||to_char((l_cnt - l_auth_required),\u0027999G999G990\u0027)\n        ||\u0027\u003C\/span\u003E\u0027);\n    sys.htp.p(\u0027\u003C\/a\u003E\u0027);\n    sys.htp.p(\u0027\u003C\/li\u003E\u0027);\n    sys.htp.p(\u0027\u003Cli class=\"t-ConfigPanel-attr\"\u003E\u0027);\n    sys.htp.p(\u0027\u003Ca href=\"\u0027\n        ||case when c_page_report_page is not null then\n                apex_util.prepare_url(\u0027f?p=\u0027||l_app_id||\u0027:\u0027||c_page_report_page||\u0027:\u0027||l_app_session\n                                     ||\u0027:::\u0027||c_page_report_page||\u0027,RIR:IREQ_REQUIRES_AUTH:Yes\u0027)\n            else\n                \u0027#\u0027\n        end\n        ||\u0027\" class=\"t-ConfigPanel-attrLink\"\u003E\u0027);\n    sys.htp.p(\u0027\u003Cspan class=\"t-ConfigPanel-attrLabel\"\u003E\u0027||c_auth_pages_msg||\u0027\u003C\/span\u003E\u0027);\n    sys.htp.p(\u0027\u003Cspan class=\"t-ConfigPanel-attrValue\"\u003E\u0027||to_char(l_auth_required,\u0027999G999G990\u0027)||\n      \u0027\u003C\/span\u003E\u0027);\n    sys.htp.p(\u0027\u003C\/a\u003E\u0027);\n    sys.htp.p(\u0027\u003C\/li\u003E\u0027);\n    sys.htp.p(\u0027\u003Cli class=\"t-ConfigPanel-attr\"\u003E\u0027);\n    sys.htp.p(\u0027\u003Ca href=\"\u0027\n        ||case when c_page_report_page is not null then\n                apex_util.prepare_url(\u0027f?p=\u0027||l_app_id||\u0027:\u0027||c_page_report_page||\u0027:\u0027||l_app_session\n                                     ||\u0027:::\u0027||c_page_report_page||\u0027,RIR:IRNEQ_AUTHORIZATION_SCHEME:No Scheme Applied\u0027)\n            else\n                \u0027#\u0027\n        end\n        ||\u0027\" class=\"t-ConfigPanel-attrLink\"\u003E\u0027);\n    sys.htp.p(\u0027\u003Cspan class=\"t-ConfigPanel-attrLabel\"\u003E\u0027||c_custom_auth_msg||\u0027\u003C\/span\u003E\u0027);\n    sys.htp.p(\u0027\u003Cspan class=\"t-ConfigPanel-attrValue\"\u003E\u0027||to_char(l_auth_scheme,\u0027999G999G990\u0027)||\n          \u0027\u003C\/span\u003E\u0027);\n    sys.htp.p(\u0027\u003C\/a\u003E\u0027);\n    sys.htp.p(\u0027\u003C\/li\u003E\u0027);\n    sys.htp.p(\u0027\u003C\/ul\u003E\u0027);\n    sys.htp.p(\u0027\u003C\/div\u003E\u0027);\n    sys.htp.p(\u0027\u003C\/div\u003E\u0027);\n    sys.htp.p(\u0027\u003C\/div\u003E\u0027);\n    sys.htp.p(\u0027\u003C\/div\u003E\u0027);\n    sys.htp.p(\u0027\u003C\/div\u003E\u0027);\n    sys.htp.p(\u0027\u003C\/div\u003E\u0027);\n    --\n    return l_retval;    \nend auth_admin;"
    }
  }
 ,{
    "id":"14903776149449186290"
   ,"Identification":{
      "Name":"Mini Calendar"
    }
   ,"Source":{
      "PL\/SQL Code":"procedure render_mini_calendar( p_region in apex_plugin.t_region ) is\n    c_date_col  constant varchar2(255) := p_region.attribute_01;\n    c_label_col constant varchar2(255) := p_region.attribute_02;\n\n    l_date_col_no  pls_integer;\n    l_label_col_no pls_integer;\n\n    c_collection constant varchar2(255) := \u0027APEX$MINICALENDAR$\u0027||rawtohex(sys_guid());\n    l_column_value_list    apex_plugin_util.t_column_value_list2;\n\n    l_region_source        varchar2(32767) := p_region.source;\n\n    --\n    l_date  timestamp with local time zone;\n    l_label varchar2(2000);\n    l_found boolean;\n    l_count number;\n\n    cursor dt_csr is\n        select c001 label, d001 the_date\n        from apex_collections\n        where collection_name = c_collection\n        order by d001 asc;\n    dt_rec dt_csr%ROWTYPE;\n\n    -- Variables for knowing what to display.\n    l_startdate  date;\n    l_enddate    date;\n    l_daycount   number;\n    l_month      varchar2(6);\n\n    l_class      varchar2(512) := \u0027\u0027;\n    l_disp       varchar2(255)  := \u0027\u0027;\n    l_id         varchar2(512) := p_region.static_id;\nbegin\n    -- get the data to be displayed\n    l_column_value_list := apex_plugin_util.get_data2 (\n                               p_sql_statement  =\u003E l_region_source,\n                               p_min_columns    =\u003E 2,\n                               p_max_columns    =\u003E null,\n                               p_component_name =\u003E p_region.name,\n                               p_max_rows       =\u003E null );\n\n    -- Get the actual column number for the fields we want.\n    l_date_col_no := apex_plugin_util.get_column_no (\n                        p_attribute_label   =\u003E \u0027Date column\u0027,\n                        p_column_alias      =\u003E c_date_col,\n                        p_column_value_list =\u003E l_column_value_list,\n                        p_is_required       =\u003E true,\n                        p_data_type         =\u003E null -- might be date, timestamp, etc.\n                    );\n\n    l_label_col_no := apex_plugin_util.get_column_no (\n                        p_attribute_label   =\u003E \u0027Label column\u0027,\n                        p_column_alias      =\u003E c_label_col,\n                        p_column_value_list =\u003E l_column_value_list,\n                        p_is_required       =\u003E true,\n                        p_data_type         =\u003E apex_plugin_util.c_data_type_varchar2\n                    );\n\n    apex_collection.create_or_truncate_collection( p_collection_name =\u003E c_collection );\n    -- Loop through the data and shove it into the collection for ease of access.\n    for l_row_num in 1..l_column_value_list(1).value_list.count loop\n        l_found := true;\n        if l_column_value_list(l_date_col_no).value_list(l_row_num).date_value is not null then\n            l_date := l_column_value_list(l_date_col_no).value_list(l_row_num).date_value;\n        elsif l_column_value_list(l_date_col_no).value_list(l_row_num).timestamp_value is not null then\n            l_date := l_column_value_list(l_date_col_no).value_list(l_row_num).timestamp_value;\n        elsif l_column_value_list(l_date_col_no).value_list(l_row_num).timestamp_tz_value is not null then\n            l_date := l_column_value_list(l_date_col_no).value_list(l_row_num).timestamp_tz_value;\n        elsif l_column_value_list(l_date_col_no).value_list(l_row_num).timestamp_ltz_value is not null then\n            l_date := l_column_value_list(l_date_col_no).value_list(l_row_num).timestamp_ltz_value;\n        else\n            -- Couldn\u0027t get a usable date value; ignore this row.\n            l_found := false;\n        end if;\n        if l_found then\n            select count(*) into l_count\n            from apex_collections\n            where collection_name = c_collection\n                and d001 = trunc(l_date);\n\n            if l_count = 0 then\n                l_label := apex_plugin_util.escape(\n                            apex_plugin_util.get_value_as_varchar2(\n                                p_data_type =\u003E l_column_value_list(l_label_col_no).data_type,\n                                p_value     =\u003E l_column_value_list(l_label_col_no).value_list(l_row_num) ),\n                            p_region.escape_output );\n                apex_collection.add_member(\n                    p_collection_name =\u003E c_collection,\n                    p_c001            =\u003E l_label,\n                    p_d001            =\u003E trunc(l_date)\n                );\n            end if;\n        end if;\n    end loop;\n\n    open dt_csr;\n    fetch dt_csr into dt_rec;\n    if dt_csr%FOUND then\n        l_date  := dt_rec.the_date;\n        l_label := dt_rec.label;\n    else\n        l_date  := trunc(localtimestamp);\n        l_label := \u0027Today\u0027;\n    end if;\n\n    -- Print the calendar header.\n    sys.htp.prn(\u0027\u003Cdiv class=\"a-MiniCal\"\u003E\u0027);\n    sys.htp.prn(\u0027\u003Ch3 class=\"a-MiniCal-title\"\u003E\u0027||to_char(l_date, \u0027Month\u0027)||\u0027 \u0027||to_char(l_date,\u0027YYYY\u0027)||\u0027\u003C\/h3\u003E\u0027);\n    sys.htp.prn(\u0027\u003Ctable class=\"a-MiniCal-month\" summary=\"Calendar of \u0027||to_char(l_date, \u0027Month\u0027)||\u0027 \u0027||to_char(l_date,\u0027YYYY\u0027)||\u0027\"\u003E\u0027);\n    sys.htp.prn(\u0027\u003Cthead\u003E\u0027);\n    sys.htp.prn(\u0027\u003Ctr\u003E\u0027);\n    sys.htp.prn(\u0027\u003Cth class=\"a-MiniCal-dayOfWeek\" scope=\"col\" id=\"\u0027||l_id||\u0027_SUN\" title=\"Sunday\"\u003ESu\u003C\/th\u003E\u0027);\n    sys.htp.prn(\u0027\u003Cth class=\"a-MiniCal-dayOfWeek\" scope=\"col\" id=\"\u0027||l_id||\u0027_MON\" title=\"Monday\"\u003EMo\u003C\/th\u003E\u0027);\n    sys.htp.prn(\u0027\u003Cth class=\"a-MiniCal-dayOfWeek\" scope=\"col\" id=\"\u0027||l_id||\u0027_TUE\" title=\"Tuesday\"\u003ETu\u003C\/th\u003E\u0027);\n    sys.htp.prn(\u0027\u003Cth class=\"a-MiniCal-dayOfWeek\" scope=\"col\" id=\"\u0027||l_id||\u0027_WED\" title=\"Wednesday\"\u003EWe\u003C\/th\u003E\u0027);\n    sys.htp.prn(\u0027\u003Cth class=\"a-MiniCal-dayOfWeek\" scope=\"col\" id=\"\u0027||l_id||\u0027_THU\" title=\"Thursday\"\u003ETh\u003C\/th\u003E\u0027);\n    sys.htp.prn(\u0027\u003Cth class=\"a-MiniCal-dayOfWeek\" scope=\"col\" id=\"\u0027||l_id||\u0027_FRI\" title=\"Friday\"\u003EFr\u003C\/th\u003E\u0027);\n    sys.htp.prn(\u0027\u003Cth class=\"a-MiniCal-dayOfWeek\" scope=\"col\" id=\"\u0027||l_id||\u0027_SAT\" title=\"Saturday\"\u003ESa\u003C\/th\u003E\u0027);\n    sys.htp.prn(\u0027\u003C\/tr\u003E\u0027);\n    sys.htp.prn(\u0027\u003C\/thead\u003E\u0027);\n    -- Print the calendar body.\n    sys.htp.prn(\u0027\u003Ctbody\u003E\u0027);\n    -- Do some quick manipulation to get the day of the week that the first of the month\n     --  lands on, and then shift our starting date to the first day of that week.\n    l_startdate := trunc(l_date,\u0027MM\u0027) - to_char(trunc(l_date,\u0027MM\u0027),\u0027D\u0027) + 1;\n    l_enddate := last_day(l_date) + 7-to_char(last_day(l_date),\u0027D\u0027);\n    l_month := to_char(l_date,\u0027YYYYMM\u0027);\n\n    for l_daycount in 0..(l_enddate - l_startdate) loop\n        l_class := \u0027\u0027;\n        l_disp := apex_escape.html(to_char(l_startdate+l_daycount,\u0027fmDD\u0027));\n        -- If the day isn\u0027t part of the month being displayed, grey it out.\n        if to_char(l_startdate+l_daycount,\u0027YYYYMM\u0027) \u003C\u003E l_month then\n            l_class := \u0027is-null\u0027;\n            l_disp := \u0027\u003Cspan class=\"a-MiniCal-date\"\u003E\u0027||l_disp||\u0027\u003C\/span\u003E\u0027;\n        else\n            if to_char(l_startdate+l_daycount,\u0027D\u0027) in (\u00271\u0027,\u00277\u0027) then\n                l_class := l_class || \u0027is-weekend \u0027;\n                l_disp := \u0027\u003Cspan class=\"a-MiniCal-date\"\u003E\u0027||l_disp||\u0027\u003C\/span\u003E\u0027;\n            end if;\n            if l_month = to_char(localtimestamp,\u0027YYYYMM\u0027)\n                    and l_startdate+l_daycount = current_date then\n                l_class := l_class || \u0027is-today \u0027;\n                l_disp := \u0027\u003Cspan class=\"a-MiniCal-date\"\u003E\u0027||l_disp||\u0027\u003C\/span\u003E\u0027;\n            end if;\n            if to_char(l_startdate+l_daycount,\u0027YYYYMMDD\u0027)\n                    = to_char(l_date,\u0027YYYYMMDD\u0027) then\n                l_class := l_class || \u0027is-active \u0027;\n                l_disp := \u0027\u003Cspan class=\"a-MiniCal-date\" title=\"\u0027|| apex_escape.html(l_label) ||\u0027\"\u003E\u0027||l_disp||\u0027\u003C\/span\u003E\u0027;\n            end if;\n        end if;\n        if to_char(l_startdate+l_daycount,\u0027D\u0027) = \u00271\u0027 then\n            sys.htp.prn(\u0027\u003Ctr\u003E\u0027);\n        end if;\n        sys.htp.prn(\u0027\u003Ctd class=\"a-MiniCal-day \u0027||l_class||\u0027\" headers=\"\u0027||l_id||\u0027_\u0027||to_char(l_startdate+l_daycount,\u0027DY\u0027)||\u0027\"\u003E\u0027||l_disp||\u0027\u003C\/td\u003E\u0027);\n        if to_char(l_startdate+l_daycount,\u0027D\u0027) = \u00277\u0027 then\n            sys.htp.prn(\u0027\u003C\/tr\u003E\u0027);\n        end if;\n        if to_char(l_startdate+l_daycount,\u0027YYYYMMDD\u0027) = to_char(l_date,\u0027YYYYMMDD\u0027) then\n            fetch dt_csr into dt_rec;\n            if dt_csr%FOUND then\n                l_date  := dt_rec.the_date;\n                l_label := dt_rec.label;\n            end if;\n        end if;\n    end loop;\n    close dt_csr;\n\n    -- Clean up after ourselves.\n    apex_collection.delete_collection( p_collection_name =\u003E c_collection );\n\n    sys.htp.prn(\u0027\u003C\/tbody\u003E\u0027);\n    sys.htp.prn(\u0027\u003C\/table\u003E\u0027);\n    sys.htp.prn(\u0027\u003C\/div\u003E\u0027);\nend render_mini_calendar;\n\nfunction render ( p_region in apex_plugin.t_region,\n    p_plugin in apex_plugin.t_plugin, p_is_printer_friendly in boolean )\n    return apex_plugin.t_region_render_result is\nbegin\n    -- CSS for the Gantt Chart\n    apex_css.add_file (\n        p_name =\u003E \u0027com_oracle_apex_minicalendar\u0027,\n        p_directory =\u003E p_plugin.file_prefix );\n\n    render_mini_calendar( p_region );\n    return null;\nend;"
    }
  }
 ,{
    "id":"14962984824135652699"
   ,"Identification":{
      "Name":"Validate Content"
    }
   ,"Source":{
      "PL\/SQL Code":"function render\n(\n    p_region              in apex_plugin.t_region,\n    p_plugin              in apex_plugin.t_plugin,\n    p_is_printer_friendly in boolean\n) return apex_plugin.t_region_render_result\nis\n    c_region_link          constant varchar2(4000) := apex_util.prepare_url(p_region.attribute_01);\n    -- Constants for the columns of our region source query\n    c_verified_by_col constant pls_integer := 1;\n    c_created_col     constant pls_integer := 2;\n\n    l_valid_data_type_list wwv_flow_global.vc_arr2;\n    l_column_value_list    apex_plugin_util.t_column_value_list2;\n    l_color                varchar2(30) := \u0027green\u0027;\n    l_verified_by          varchar2(300);\n    l_created              timestamp with time zone;\n    l_message              varchar2(4000);\n    c                      integer := 0;\nbegin\n    apex_css.add_file(\n        p_name =\u003E \u0027validate\u0027,\n        p_directory =\u003E p_plugin.file_prefix,\n        p_version =\u003E null\n    );\n\n    -- define the valid column data types for the region query\n    l_valid_data_type_list(c_verified_by_col) := apex_plugin_util.c_data_type_varchar2;\n    l_valid_data_type_list(c_created_col)     := apex_plugin_util.c_data_type_timestamp_tz;\n\n    -- get the data to be displayed\n    l_column_value_list := apex_plugin_util.get_data2 (\n    p_sql_statement =\u003E p_region.source,\n    p_min_columns =\u003E 2,\n    p_max_columns =\u003E 2,\n    p_data_type_list =\u003E l_valid_data_type_list,\n    p_component_name =\u003E p_region.name);\n\n    for i in 1 .. l_column_value_list(c_created_col).value_list.count\n    loop\n        c := c + 1;\n        l_verified_by := apex_escape.html(lower(l_column_value_list(c_verified_by_col).value_list(i).varchar2_value));\n        l_created     := l_column_value_list(c_created_col).value_list(i).timestamp_tz_value;\n        exit;\n    end loop;\n\n    if l_created is null then\n        l_color := \u0027red\u0027;\n        l_verified_by := \u0027Unvalidated\u0027;\n    elsif l_created \u003E (current_timestamp - interval \u00277\u0027 day) then\n        l_color := \u0027green\u0027;\n    else\n        l_color := \u0027yellow\u0027;\n    end if;\n\n    sys.htp.p(\u0027\u003Cdiv class=\"t-Validation is-\u0027\n        ||case l_color when \u0027green\u0027 then \u0027valid\u0027\n            when \u0027yellow\u0027 then \u0027warning\u0027\n            else \u0027invalid\u0027\n        end||\u0027\"\u003E\u0027);\n    sys.htp.p(\u0027\u003Cdiv class=\"t-Validation-icon\"\u003E\u0027);\n    sys.htp.p(\u0027\u003Cspan class=\"a-Icon icon-\u0027\n        ||case l_color when \u0027green\u0027 then \u0027check\u0027\n            when \u0027yellow\u0027 then \u0027warning\u0027\n            else \u0027remove\u0027\n        end||\u0027\"\u003E\u003C\/span\u003E\u0027);\n    sys.htp.p(\u0027\u003C\/div\u003E\u0027);\n    sys.htp.p(\u0027\u003Cdiv class=\"t-Validation-body\"\u003E\u0027);\n    sys.htp.p(\u0027\u003Cspan class=\"t-Validation-date\"\u003E\u0027||apex_util.get_since(l_created)||\u0027\u003C\/span\u003E\u0027);\n    sys.htp.p(\u0027\u003Cspan class=\"t-Validation-user\"\u003E\u0027||l_verified_by||\u0027\u003C\/span\u003E\u0027);\n    sys.htp.p(\u0027\u003Cspan class=\"t-Validation-actions\"\u003E\u0027);\n    sys.htp.prn(\u0027\u003Cbutton class=\"t-Button t-Button--pill t-Button--pillStart\" \u0027\n        ||\u0027onclick=\"apex.navigation.redirect(\u0027\u0027\u0027||c_region_link||\u0027\u0027\u0027);\" type=\"button\"\u003EValidate\u003C\/button\u003E\u0027);\n    sys.htp.p(\u0027\u003Cbutton class=\"t-Button t-Button--pill t-Button--pillEnd t-Button--icon t-Button--slim\" \u0027\n        ||\u0027onclick=\"apex.navigation.redirect(\u0027\u0027\u0027||c_region_link||\u0027\u0027\u0027);\" type=\"button\" alt=\"Validate\"\u003E\u0027\n        ||\u0027\u003Cspan class=\"a-Icon icon-open-in-dialog\"\u003E\u003C\/span\u003E\u003C\/button\u003E\u0027);\n    sys.htp.p(\u0027\u003C\/span\u003E\u0027);\n    sys.htp.p(\u0027\u003C\/div\u003E\u0027);\n    sys.htp.p(\u0027\u003C\/div\u003E\u0027);\n\n    return null;\nend render;"
    }
  }
 ,{
    "id":"14963189425301047168"
   ,"Identification":{
      "Name":"Completeness"
    }
   ,"Source":{
      "PL\/SQL Code":"function render (\n    p_region              in apex_plugin.t_region,\n    p_plugin              in apex_plugin.t_plugin,\n    p_is_printer_friendly in boolean )\n    return apex_plugin.t_region_render_result\nis\n    c_region_static_id constant varchar2(255) := apex_escape.html_attribute( p_region.static_id );\n\n    -- Constants for the columns of our region source query\n    c_metric_col       constant pls_integer := 1;\n    c_score_col        constant pls_integer := 2;\n    c_maxval_col       constant pls_integer := 3;\n\n    -- attributes of the plug-in\n    l_score      number         := 0;\n    l_max        number         := 0;\n    l_pct        number         := 0;\n    l_color      varchar(30)    := \u0027 is-danger\u0027;\n    l_label      varchar2(255)  := null;\n    l_trshld1    number         := nvl(to_number(p_region.attribute_01), 66);\n    l_t1_lbl     varchar2(100)  := nvl(p_region.attribute_02, \u0027Strong\u0027);\n    l_trshld2    number         := nvl(to_number(p_region.attribute_03), 33);\n    l_t2_lbl     varchar2(100)  := nvl(p_region.attribute_04,\u0027Moderate\u0027);\n    l_trshld3    number         := nvl(to_number(p_region.attribute_05), 0);\n    l_t3_lbl     varchar2(100)  := nvl(p_region.attribute_06,\u0027Weak\u0027);\n    l_0p_lbl     varchar2(100)  := nvl(p_region.attribute_07,\u0027Very Weak\u0027);\n    l_mdl_title  varchar2(255)  := nvl(p_region.attribute_08,\u0027Completeness Score Details\u0027);\n    l_rslt_hdr   varchar2(4000) := \u0027\u003Cp\u003E\u0027 || p_region.attribute_09 || \u0027\u003C\/p\u003E\u0027;\n    l_rslt_ftr   varchar2(4000) := \u0027\u003Cp\u003E\u0027 || p_region.attribute_10 || \u0027\u003C\/p\u003E\u0027;\n\n    l_valid_data_type_list wwv_flow_global.vc_arr2;\n    l_column_value_list    apex_plugin_util.t_column_value_list2;\nbegin\n    -- define the valid column data types for the region query\n    l_valid_data_type_list(c_metric_col) := apex_plugin_util.c_data_type_varchar2;\n    l_valid_data_type_list(c_score_col)  := apex_plugin_util.c_data_type_number;\n    l_valid_data_type_list(c_maxval_col) := apex_plugin_util.c_data_type_number;\n\n    -- get the data to be displayed\n    l_column_value_list := apex_plugin_util.get_data2 (\n                               p_sql_statement  =\u003E p_region.source,\n                               p_min_columns    =\u003E 3,\n                               p_max_columns    =\u003E 3,\n                               p_data_type_list =\u003E l_valid_data_type_list,\n                               p_component_name =\u003E p_region.name);\n\n    sys.htp.p(\u0027\n\u003Cdiv class=\"js-regionDialog js-resizable js-modal js-draggable js-dialog-size480x320\" title=\"\u0027||apex_escape.html_attribute(l_mdl_title)||\u0027\" id=\"status-completeness-modal-\u0027 || c_region_static_id || \u0027\" style=\"display:none;\"\u003E\n  \u003Cdiv class=\"t-Completeness-dialog\"\u003E\u0027 || l_rslt_hdr || \u0027\n    \u003Ctable class=\"u-Report\"\u003E\n      \u003Cthead\u003E\n        \u003Ctr\u003E\n          \u003Cth id=\"h_metric_\u0027 || c_region_static_id || \u0027\"\u003EMetric\u003C\/th\u003E\n          \u003Cth id=\"h_score_\u0027 || c_region_static_id || \u0027\"\u003EScore\u003C\/th\u003E\n          \u003Cth id=\"h_maximum_\u0027 || c_region_static_id || \u0027\"\u003EMaximum Score\u003C\/th\u003E\n        \u003C\/tr\u003E\n      \u003C\/thead\u003E\n      \u003Ctbody\u003E\u0027 );\n\n    for i in 1 .. l_column_value_list(c_metric_col).value_list.count\n    loop\n        l_score := l_score + nvl(l_column_value_list(c_score_col).value_list(i).number_value, 0);\n        l_score := greatest(l_score,0);\n        l_max   := l_max + nvl(l_column_value_list(c_maxval_col).value_list(i).number_value, 0);\n        if nvl(l_column_value_list(c_score_col).value_list(i).number_value, 0) \u003C 0 then\n            sys.htp.p(\u0027\n\u003Ctr\u003E\n  \u003Ctd headers=\"h_metric_\u0027 || c_region_static_id || \u0027\" class=\"t-Completeness-negScore\"\u003E\u0027 || apex_escape.html(l_column_value_list(c_metric_col).value_list(i).varchar2_value) || \u0027\u003C\/td\u003E\n  \u003Ctd headers=\"h_score_\u0027 || c_region_static_id || \u0027\" class=\"t-Completeness-negScore u-tR\"\u003E\u0027 || nvl(l_column_value_list(c_score_col).value_list(i).number_value, 0) || \u0027\u003C\/td\u003E\n  \u003Ctd headers=\"h_maximum_\u0027 || c_region_static_id || \u0027\" class=\"t-Completeness-negScore u-tR\"\u003E\u0027 || nvl(l_column_value_list(c_maxval_col).value_list(i).number_value, 0) || \u0027\u003C\/td\u003E\n\u003C\/tr\u003E\u0027 );\n        else\n            sys.htp.p(\u0027\n\u003Ctr\u003E\n  \u003Ctd headers=\"h_metric_\u0027 || c_region_static_id || \u0027\"\u003E\u0027 || apex_escape.html(l_column_value_list(c_metric_col).value_list(i).varchar2_value) || \u0027\u003C\/td\u003E\n  \u003Ctd headers=\"h_score_\u0027 || c_region_static_id || \u0027\" class=\"u-tR\"\u003E\u0027 || nvl(l_column_value_list(c_score_col).value_list(i).number_value, 0) || \u0027\u003C\/td\u003E\n  \u003Ctd headers=\"h_maximum_\u0027 || c_region_static_id || \u0027\" class=\"u-tR\"\u003E\u0027 || nvl(l_column_value_list(c_maxval_col).value_list(i).number_value, 0) || \u0027\u003C\/td\u003E\n\u003C\/tr\u003E\u0027 );\n        end if;\n    end loop;\n\n    sys.htp.p(\u0027\n\u003C\/tbody\u003E\n\u003Ctfoot\u003E\n\u003Ctr\u003E\n  \u003Ctd\u003E\u003Cstrong\u003EReport Total\u003C\/strong\u003E\u003C\/td\u003E\n  \u003Ctd class=\"u-tR\"\u003E\u003Cstrong\u003E\u0027 || apex_escape.html( l_score ) || \u0027\u003C\/strong\u003E\u003C\/td\u003E\n  \u003Ctd class=\"u-tR\"\u003E\u003Cstrong\u003E\u0027 || apex_escape.html( l_max ) || \u0027\u003C\/strong\u003E\u003C\/td\u003E\n\u003C\/tr\u003E\n\u003C\/tfoot\u003E\n\u003C\/table\u003E\u0027 || l_rslt_ftr || \u0027\u003C\/div\u003E\u003C\/div\u003E\u0027 );\n\n    l_max := l_max + 10; -- don\u0027t fill circle completely\n\n    if l_max \u003E 0 then\n        l_pct := round( 100 * (l_score \/ l_max));\n    end if;\n\n    if l_pct \u003E= to_number(l_trshld1) then \n        l_color := \u0027 is-success\u0027;\n        l_label := l_t1_lbl;\n    elsif l_pct \u003E= to_number(l_trshld2) then \n        l_color := \u0027 is-warning\u0027;\n        l_label := l_t2_lbl;\n    elsif l_pct \u003E= to_number(l_trshld3) then \n        l_color := \u0027 is-danger\u0027;\n        l_label := l_t3_lbl;\n    else\n        l_color := \u0027 is-danger\u0027;\n        l_label := l_0p_lbl;\n    end if;\n\n\/*    if l_score \u003C to_number(l_trshld3) then\n        l_label := l_0p_lbl;\n    end if;\n*\/\n    sys.htp.p(\u0027\n\u003Ca href=\"javascript:openModal(\u0027\u0027status-completeness-modal-\u0027 || c_region_static_id||\u0027\u0027\u0027,\u0027\u0027link_\u0027||c_region_static_id||\u0027\u0027\u0027);\" id=\"link_\u0027||c_region_static_id||\u0027\" class=\"t-Completeness\u0027||l_color||\u0027\"\u003E\n  \u003Cspan class=\"t-Completeness-labelWrap\"\u003E\u003Cspan class=\"t-Completeness-label\"\u003E\u0027||apex_escape.html(l_label)||\u0027\u003C\/span\u003E\u003C\/span\u003E\n  \u003Cspan class=\"t-Completeness-fill\" style=\"width:\u0027||l_pct||\u0027%\"\u003E\u003C\/span\u003E\n\u003C\/a\u003E\u0027 );\n\n    -- sys.htp.p(\u0027\u003Cdiv class=\"db-FillChart\"\u003E\n    --     \u003Ca href=\"javascript:openModal(\u0027\u0027status-completeness-modal-\u0027 || c_region_static_id||\u0027\u0027\u0027,\u0027\u0027link_\u0027||c_region_static_id||\u0027\u0027\u0027);\" id=\"link_\u0027||c_region_static_id||\u0027\" class=\"db-FillChart-link\"\u003E\n    --     \u003Cdiv class=\"db-FillChart-fillWrapper\"\u003E\n    --       \u003Cdiv class=\"db-FillChart-heading\"\u003E\u0027||apex_escape.html(l_label)||\u0027\u003C\/div\u003E\n    --         \u003Cdiv class=\"db-FillChart-fill \u0027||l_color||\u0027\" style=\"height: \u0027||l_pct||\u0027%\"\u003E\u003C\/div\u003E\u003C\/div\u003E\n    --     \u003C\/a\u003E\n    -- \u003C\/div\u003E\u0027);\n\n    return null;\nend render;"
    }
  }
 ,{
    "id":"15283217853092713359"
   ,"Identification":{
      "Name":"ACL Warning"
    }
   ,"Source":{
      "PL\/SQL Code":"function render (   p_region              in apex_plugin.t_region,\n                        p_plugin              in apex_plugin.t_plugin,\n                        p_is_printer_friendly in boolean ) return apex_plugin.t_region_render_result is\n    l_retval         apex_plugin.t_region_render_result;\n    --\n    c_admin_page  constant varchar2(512)   := p_region.attribute_01;\nbegin\n    -- This plugin displays a warning message if the ACL is disabled. To use:\n    --    1) Add this plugin region to the top of the application home page.\n    --    2) Set the template to Alert region, with the Warning template option.\n    --    3) Add a PL\/SQL expression condition to the region, following this pattern:\n    --        eba_XXX_fw.get_preference_value(\u0027ACCESS_CONTROL_ENABLED\u0027) = \u0027N\u0027\n\n    sys.htp.p(\u0027Access control for this application is currently disabled. \u0027\n        ||\u0027All users are currently Administrators. Navigate to \u003Ca href=\"\u0027\n        ||apex_util.prepare_url(c_admin_page)||\u0027\"\u003Eapplication administration\u003C\/a\u003E \u0027\n        ||\u0027to enable access control.\u0027);\n\n    return l_retval;    \nend;"
    }
  }
 ,{
    "id":"15650058751807063942"
   ,"Identification":{
      "Name":"HTML 5 Bar Chart"
    }
   ,"Source":{
      "PL\/SQL Code":"function render (\n    p_region in apex_plugin.t_region,\n    p_plugin in apex_plugin.t_plugin,\n    p_is_printer_friendly in boolean\n) return apex_plugin.t_region_render_result is\nbegin\n    sys.htp.prn(\u0027\u003Cdiv id=\"\u0027||apex_escape.html_attribute(p_region.static_id)||\u0027_chart\" class=\"hbc\"\u003E\u0027);\n    sys.htp.prn(\u0027\u003C\/div\u003E\u0027);\n    \n    apex_javascript.add_onload_code (\n        p_code =\u003E \u0027com_oracle_apex_html5_bar_chart(\u0027||\n            apex_javascript.add_value(p_region.static_id)||\n            \u0027{\u0027||\n                -- Why is this attribute needed if is not used?\n                apex_javascript.add_attribute(\n                    \u0027pageItems\u0027, \n                    apex_plugin_util.page_item_names_to_jquery(p_region.ajax_items_to_submit)\n                )||\n                apex_javascript.add_attribute(\n                    \u0027ajaxIdentifier\u0027, \n                    apex_plugin.get_ajax_identifier, \n                    FALSE, \n                    FALSE\n                )||\n            \u0027}\u0027||\n        \u0027);\u0027\n    );\n    \n    return null;\nend render;\n\nfunction ajax (\n    p_region in apex_plugin.t_region,\n    p_plugin in apex_plugin.t_plugin\n) return apex_plugin.t_region_ajax_result is\n    -- Map region attributes to function constants\n    -- MODERN, CLASSIC\n    c_chart_type                 constant varchar2(7)     := p_region.attribute_15;\n    -- MODERN, MODERN_2, SOLAR, METRO, CUSTOM, COLUMN\n    c_color_scheme               constant varchar2(8)     := p_region.attribute_17;\n    c_custom_chart_colors        constant varchar2(4000)  := p_region.attribute_10;\n    c_color_column               constant varchar2(255)   := p_region.attribute_19;\n    -- NONE, IMAGE, ICON, INITIALS\n    c_icon_type                  constant varchar2(8)     := case when c_chart_type = \u0027ICON\u0027 then p_region.attribute_01 end;\n    c_label_column               constant varchar2(255)   := p_region.attribute_02;\n    c_label_link                 constant varchar2(255)   := p_region.attribute_03;\n    c_value_column               constant varchar2(255)   := p_region.attribute_04;\n    c_value_link                 constant varchar2(255)   := p_region.attribute_05;\n    c_value_format_mask          constant varchar2(4000)  := p_region.attribute_21;\n\n    -- ABOVE, AROUND\n    c_text_position              varchar2(6)              := p_region.attribute_18;\n    c_chart_css_classes          constant varchar2(32767) := p_region.attribute_06;\n    c_image_url                  constant varchar2(4000)  := p_region.attribute_07;\n    c_css_icon_class_name        constant varchar2(255)   := p_region.attribute_08;\n    c_initials_column            constant varchar2(255)   := p_region.attribute_09;\n    -- ABSOLUTE, RELATIVE\n    c_bar_width_calculation      constant varchar2(8)     := p_region.attribute_16;\n    c_display                    constant varchar2(19)    := p_region.attribute_11;\n    c_prefix_for_value           constant varchar2(4000)  := p_region.attribute_12;\n    c_postfix_for_value          constant varchar2(4000)  := p_region.attribute_13;\n    c_maximum_rows               constant number          := p_region.attribute_14;\n    c_message_when_no_data_found constant varchar2(4000)  := p_region.attribute_20;\n    \n    l_color_column_number        pls_integer;\n    l_label_column_number        pls_integer;\n    l_value_column_number        pls_integer;\n    l_initials_column_number     pls_integer;\n    \n    l_column_value_list          apex_plugin_util.t_column_value_list2;\n    \n    l_color                      varchar2(4000)           := NULL;\n    l_label                      varchar2(4000)           := NULL;\n    l_label_link                 varchar2(4000)           := NULL;\n    l_value                      varchar2(4000)           := NULL;\n    l_display_value              varchar2(4000)           := NULL;\n    l_value_link                 varchar2(4000)           := NULL;\n    l_image_url                  varchar2(4000)           := NULL;\n    l_css_icon_class_name        varchar2(4000)           := NULL;\n    l_initials                   varchar2(4000)           := NULL;\n    l_message_when_no_data_found varchar2(4000)           := NULL;\n\n    l_custom_chart_colors_table  apex_application_global.vc_arr2;\n    l_custom_chart_colors        varchar2(32767)          := NULL;\nbegin\n    l_column_value_list := apex_plugin_util.get_data2(\n                               P_SQL_STATEMENT  =\u003E p_region.source,\n                               P_MIN_COLUMNS    =\u003E 1,\n                               P_MAX_COLUMNS    =\u003E NULL,\n                               P_COMPONENT_NAME =\u003E p_region.name,\n                               P_MAX_ROWS =\u003E c_maximum_rows);\n\n    l_color_column_number := apex_plugin_util.get_column_no (\n                                 p_attribute_label   =\u003E \u0027Color Column\u0027,\n                                 p_column_alias      =\u003E c_color_column,\n                                 p_column_value_list =\u003E l_column_value_list,\n                                 p_is_required       =\u003E c_color_scheme = \u0027COLUMN\u0027,\n                                 P_data_type         =\u003E apex_plugin_util.c_data_type_varchar2);\n    l_label_column_number := apex_plugin_util.get_column_no (\n                                 p_attribute_label   =\u003E \u0027Label Column\u0027,\n                                 p_column_alias      =\u003E c_label_column,\n                                 p_column_value_list =\u003E l_column_value_list,\n                                 p_is_required       =\u003E TRUE,\n                                 P_data_type         =\u003E apex_plugin_util.c_data_type_varchar2);\n    l_value_column_number := apex_plugin_util.get_column_no (\n                                 p_attribute_label   =\u003E \u0027Value Column\u0027,\n                                 p_column_alias      =\u003E c_value_column,\n                                 p_column_value_list =\u003E l_column_value_list,\n                                 p_is_required       =\u003E TRUE,\n                                 P_data_type         =\u003E apex_plugin_util.c_data_type_varchar2);\n    if c_icon_type = \u0027INITIALS\u0027 then\n        l_initials_column_number := apex_plugin_util.get_column_no (\n                                        p_attribute_label   =\u003E \u0027Initials Column\u0027,\n                                        p_column_alias      =\u003E c_initials_column,\n                                        p_column_value_list =\u003E l_column_value_list,\n                                        p_is_required       =\u003E true,\n                                        P_data_type         =\u003E apex_plugin_util.c_data_type_varchar2);\n    end if;\n    -- begin output as JSON\n    owa_util.mime_header(\u0027application\/json\u0027, FALSE);\n    sys.htp.p(\u0027Cache-Control: no-store\u0027);\n    sys.htp.p(\u0027Pragma: no-cache\u0027);\n    owa_util.http_header_close;\n    \n    if c_color_scheme = \u0027CUSTOM\u0027 then\n        l_custom_chart_colors_table := apex_util.string_to_table(case when c_custom_chart_colors is not NULL then TRIM(BOTH \u0027\u0027\u0027\u0027 from apex_escape.js_literal(c_custom_chart_colors)) end, \u0027:\u0027);\n        l_custom_chart_colors := \u0027\"color_scheme\":[\u0027;\n        for I in l_custom_chart_colors_table.first .. l_custom_chart_colors_table.last loop\n            if I \u003E 1 then\n                l_custom_chart_colors := l_custom_chart_colors||\u0027,\u0027;\n            end if;\n            l_custom_chart_colors := l_custom_chart_colors||\u0027\"\u0027||l_custom_chart_colors_table(I)||\u0027\"\u0027;\n        end loop;\n        l_custom_chart_colors := l_custom_chart_colors||\u0027],\u0027;\n    end if;\n\n    l_message_when_no_data_found := apex_escape.html_whitelist(\n                                        apex_plugin_util.replace_substitutions (\n                                            p_value  =\u003E c_message_when_no_data_found,\n                                            p_escape =\u003E FALSE));\n\n    sys.htp.prn(\n        \u0027{\u0027||\n            apex_javascript.add_attribute (\n                \u0027chart_type\u0027,\n                c_chart_type,\n                FALSE,\n                TRUE\n            ));\n    sys.htp.prn(\n        apex_javascript.add_attribute (\n            \u0027message_when_no_data_found\u0027,\n            l_message_when_no_data_found,\n            TRUE,\n            TRUE\n        ));\n    sys.htp.prn(\n        apex_javascript.add_attribute (\n            \u0027chart_css_class_names\u0027,\n            c_chart_css_classes,\n            TRUE,\n            TRUE\n        ));\n    sys.htp.prn(\n        apex_javascript.add_attribute (\n            \u0027icon_type\u0027,\n            c_icon_type,\n            TRUE,\n            TRUE\n        ));\n    if c_color_scheme = \u0027CUSTOM\u0027 then\n        sys.htp.prn(\n            l_custom_chart_colors\n        );\n    else\n        sys.htp.prn(\n            apex_javascript.add_attribute (\n                \u0027color_scheme\u0027,\n                c_color_scheme,\n                TRUE,\n                TRUE\n            ));\n    end if;\n    sys.htp.prn(\n            apex_javascript.add_attribute (\n                \u0027text_position\u0027,\n                c_text_position,\n                FALSE,\n                TRUE\n            )||\n            apex_javascript.add_attribute (\n                \u0027bar_width_calculation\u0027,\n                c_bar_width_calculation,\n                FALSE,\n                TRUE\n            )||\n            apex_javascript.add_attribute (\n                \u0027display\u0027,\n                c_display,\n                FALSE,\n                TRUE\n            )||\n            case \n              when c_display in (\u0027VALUE\u0027) then\n                  apex_javascript.add_attribute (\n                      \u0027prefix_for_value\u0027,\n                      c_prefix_for_value,\n                      TRUE,\n                      TRUE\n                  )||\n                  apex_javascript.add_attribute (\n                      \u0027postfix_for_value\u0027,\n                      c_postfix_for_value,\n                      TRUE,\n                      TRUE\n                  )\n            end||\n            \u0027\"items\":[\u0027\n    );\n    \n    --for l_row_number in l_column_value_list(1).value_list.first .. l_column_value_list(1).value_list.last loop\n    for l_row_number in 1 .. l_column_value_list(1).value_list.count loop\n        begin\n            apex_plugin_util.set_component_values (\n                p_column_value_list =\u003E l_column_value_list,\n                p_row_num =\u003E l_row_number \n            );\n            \n            if l_row_number \u003E 1 then\n              sys.htp.prn(\u0027, \u0027);\n            end if;\n            \n            sys.htp.prn(\u0027{\u0027);\n            \n            l_label := apex_plugin_util.escape (\n                apex_plugin_util.get_value_as_varchar2 (\n                    P_data_type =\u003E l_column_value_list(l_label_column_number).data_type,\n                    p_value =\u003E l_column_value_list(l_label_column_number).value_list(l_row_number)\n                ),\n                p_region.escape_output\n            );\n            sys.htp.prn(\n              apex_javascript.add_attribute (\n                    \u0027label\u0027,\n                    l_label,\n                    FALSE\n              ));\n            l_label_link := \n                case \n                    when c_label_link is not NULL then \n                        apex_util.prepare_url (\n                            apex_plugin_util.replace_substitutions (\n                                p_value  =\u003E c_label_link,\n                                p_escape =\u003E FALSE\n                            ))\n                end;\n            sys.htp.prn(\n              apex_javascript.add_attribute (\n                    \u0027label_link\u0027,\n                    l_label_link\n                ));\n            \n            l_value := apex_plugin_util.escape (\n                           apex_plugin_util.get_value_as_varchar2 (\n                               P_data_type =\u003E l_column_value_list(l_value_column_number).data_type,\n                               p_value =\u003E l_column_value_list(l_value_column_number).value_list(l_row_number)),\n                           p_region.escape_output);\n            --\n            l_display_value :=\n                case \n                    when c_value_format_mask is not NULL then\n                      to_char(to_number(l_value),c_value_format_mask)\n                    else\n                      l_value\n                end;\n\n            sys.htp.prn(\n              apex_javascript.add_attribute (\n                    \u0027display_value\u0027,\n                    l_display_value,\n                    FALSE,\n                    TRUE\n                ));\n            --\n            sys.htp.prn(\n              apex_javascript.add_attribute (\n                    \u0027value\u0027,\n                    l_value,\n                    FALSE,\n                    c_value_link is not NULL or l_color_column_number is not NULL or c_chart_type = \u0027ICON\u0027\n                ));\n\n            l_value_link := \n                case \n                    when c_value_link is not NULL then \n                        apex_util.prepare_url (\n                            apex_plugin_util.replace_substitutions (\n                                p_value  =\u003E c_value_link,\n                                p_escape =\u003E FALSE\n                            ))\n                end;\n             sys.htp.prn(\n              apex_javascript.add_attribute (\n                    \u0027value_link\u0027,\n                    l_value_link,\n                    TRUE,\n                    l_color_column_number is not NULL or c_chart_type = \u0027ICON\u0027\n                ));\n            if l_color_column_number is not NULL then\n                l_color := apex_plugin_util.escape (\n                               apex_plugin_util.get_value_as_varchar2 (\n                                   P_data_type =\u003E l_column_value_list(l_color_column_number).data_type,\n                                   p_value =\u003E l_column_value_list(l_color_column_number).value_list(l_row_number)),\n                               p_region.escape_output);\n                sys.htp.prn(\n                    apex_javascript.add_attribute (\n                        \u0027color\u0027,\n                        l_color,\n                        FALSE,\n                        c_chart_type = \u0027ICON\u0027\n                    ));\n            end if;\n            if c_icon_type = \u0027IMAGE\u0027 then\n                l_image_url := \n                    case \n                        when c_image_url is not NULL then \n                            apex_util.prepare_url (\n                                apex_plugin_util.replace_substitutions (\n                                    p_value  =\u003E c_image_url,\n                                    p_escape =\u003E FALSE\n                                ))\n                    end;\n                sys.htp.prn(\n                    apex_javascript.add_attribute (\n                        \u0027image_url\u0027,\n                        l_image_url,\n                        FALSE,\n                        FALSE\n                    ));\n            elsif c_icon_type = \u0027ICON\u0027 then\n                l_css_icon_class_name := apex_plugin_util.replace_substitutions (\n                                             p_value  =\u003E c_css_icon_class_name,\n                                             p_escape =\u003E TRUE);\n                sys.htp.prn(\n                    apex_javascript.add_attribute (\n                        \u0027icon_css_class_name\u0027,\n                        l_css_icon_class_name,\n                        FALSE,\n                        FALSE\n                    ));\n            elsif c_icon_type = \u0027INITIALS\u0027 then\n                l_initials := apex_plugin_util.escape (\n                                  apex_plugin_util.get_value_as_varchar2 (\n                                      P_data_type =\u003E l_column_value_list(l_initials_column_number).data_type,\n                                      p_value =\u003E l_column_value_list(l_initials_column_number).value_list(l_row_number)),\n                                  p_region.escape_output);\n                sys.htp.prn(\n                    apex_javascript.add_attribute (\n                        \u0027initials\u0027,\n                        l_initials,\n                        FALSE,\n                        FALSE\n                    ));\n            end if;\n            \n            sys.htp.prn(\u0027}\u0027);\n            \n            apex_plugin_util.clear_component_values;\n        exception\n            when OTHERS then\n                apex_plugin_util.clear_component_values;\n                raise;\n        end;\n    end loop;\n    sys.htp.prn(\n            \u0027]\u0027||\n        \u0027}\u0027\n    );\n    \n    return NULL;\nend ajax;"
    }
  }
 ,{
    "id":"15650594071132787342"
   ,"Identification":{
      "Name":"Badge List"
    }
   ,"Source":{
      "PL\/SQL Code":"function render (\n    p_region              in apex_plugin.t_region,\n    p_plugin              in apex_plugin.t_plugin,\n    p_is_printer_friendly in boolean )\n    return apex_plugin.t_region_render_result is\nbegin\n    apex_javascript.add_onload_code (\n        p_code =\u003E \u0027com_oracle_apex_badgelist(\u0027||\n            apex_javascript.add_value(p_region.static_id)||\n            \u0027{\u0027||\n                -- why is this attribute needed if is not used?\n                apex_javascript.add_attribute(\n                    \u0027pageItems\u0027, \n                    apex_plugin_util.page_item_names_to_jquery(p_region.ajax_items_to_submit)\n                )||\n                apex_javascript.add_attribute(\n                    \u0027ajaxIdentifier\u0027, \n                    apex_plugin.get_ajax_identifier, \n                    false, \n                    false\n                )||\n            \u0027}\u0027||\n        \u0027);\u0027\n    );\n--    CSS for Big Value List\n--    apex_css.add_file (\n--        p_name      =\u003E \u0027com_oracle_apex_badge_list\u0027,\n--        p_directory =\u003E p_plugin.file_prefix );\n    -- Start the list\n\n\n    -- It\u0027s time to emit the selected rows\n\n\n    return null;\n\nend render;\n\nfunction ajax (\n    p_region in apex_plugin.t_region,\n    p_plugin in apex_plugin.t_plugin\n) return apex_plugin.t_region_ajax_result \nis\n    -- It\u0027s better to have named variables instead of using the generic ones,\n    -- makes the code more readable. We are using the same defaults for the\n    -- required attributes as in the plug-in attribute configuration, because\n    -- they can still be null. Keep them in sync!\n    c_top_label_column    constant varchar2(255) := p_region.attribute_09;\n    c_value_column        constant varchar2(255) := p_region.attribute_02;\n    c_bottom_label_column constant varchar2(255) := p_region.attribute_01;\n    c_percent_column      constant varchar2(255) := p_region.attribute_03;\n    c_link_target         constant varchar2(255) := p_region.attribute_04;\n    \n    c_layout            constant varchar2(1)   := p_region.attribute_05;\n    c_chart_size        constant varchar2(3)   := p_region.attribute_06;\n    c_chart_type        constant varchar2(3)   := p_region.attribute_07;\n    c_colored           constant varchar2(1)   := p_region.attribute_08;\n\n    l_bottom_label_column_no pls_integer;\n    l_top_label_column_no    pls_integer;\n    l_value_column_no        pls_integer;\n    l_percent_column_no      pls_integer;\n    l_column_value_list      apex_plugin_util.t_column_value_list2;\n    \n    l_top_label      varchar2(4000);\n    l_value             varchar2(4000);\n    l_bottom_label      varchar2(4000);\n    l_percent           number;\n    l_url               varchar2(4000);\n    l_class             varchar2(255);\n\nbegin\n    apex_json.initialize_output (\n        p_http_cache =\u003E false );\n        -- Read the data based on the region source query\n    l_column_value_list := apex_plugin_util.get_data2 (\n                               p_sql_statement  =\u003E p_region.source,\n                               p_min_columns    =\u003E 2,\n                               p_max_columns    =\u003E null,\n                               p_component_name =\u003E p_region.name );\n\n    -- Get the actual column# for faster access and also verify that the data type\n    -- of the column matches with what we are looking for\n    l_top_label_column_no := apex_plugin_util.get_column_no (\n      p_attribute_label   =\u003E \u0027Top Label\u0027,\n      p_column_alias      =\u003E c_top_label_column,\n      p_column_value_list =\u003E l_column_value_list,\n      p_is_required       =\u003E false,\n      p_data_type         =\u003E apex_plugin_util.c_data_type_varchar2\n    );\n\n    l_value_column_no   := apex_plugin_util.get_column_no (\n                               p_attribute_label   =\u003E \u0027Value\u0027,\n                               p_column_alias      =\u003E c_value_column,\n                               p_column_value_list =\u003E l_column_value_list,\n                               p_is_required       =\u003E true,\n                               p_data_type         =\u003E apex_plugin_util.c_data_type_varchar2 );\n\n    -- Get the actual column# for faster access and also verify that the data type\n    -- of the column matches with what we are looking for\n    l_bottom_label_column_no := apex_plugin_util.get_column_no (\n      p_attribute_label   =\u003E \u0027Bottom Label\u0027,\n      p_column_alias      =\u003E c_bottom_label_column,\n      p_column_value_list =\u003E l_column_value_list,\n      p_is_required       =\u003E false,\n      p_data_type         =\u003E apex_plugin_util.c_data_type_varchar2\n    );\n                                      \n    l_percent_column_no := apex_plugin_util.get_column_no (\n                             p_attribute_label   =\u003E \u0027Percent\u0027,\n                             p_column_alias      =\u003E c_percent_column,\n                             p_column_value_list =\u003E l_column_value_list,\n                             p_is_required       =\u003E false,\n                             p_data_type         =\u003E apex_plugin_util.c_data_type_number );\n    \n    -- begin output as json\n    owa_util.mime_header(\u0027application\/json\u0027, false);\n    htp.p(\u0027cache-control: no-cache\u0027);\n    htp.p(\u0027pragma: no-cache\u0027);\n    owa_util.http_header_close;\n --   l_message_when_no_data_found := apex_escape.html_whitelist(\n  --      apex_plugin_util.replace_substitutions (\n   --             p_value  =\u003E c_message_when_no_data_found,\n   --             p_escape =\u003E false\n    --        )\n    --    );\n    apex_json.open_object();\n    apex_json.write(\u0027layout\u0027, c_layout); \n    apex_json.write(\u0027chart_size\u0027, c_chart_size); \n    apex_json.write(\u0027chart_type\u0027, c_chart_type); \n    apex_json.write(\u0027colored\u0027, c_colored); \n    apex_json.open_array(\u0027data\u0027);\n    for l_row_num in 1 .. l_column_value_list(1).value_list.count loop\n        begin\n            apex_json.open_object(); \n            -- Set the column values of our current row so that apex_plugin_util.replace_substitutions\n            -- can do substitutions for columns contained in the region source query.\n            apex_plugin_util.set_component_values (\n                p_column_value_list =\u003E l_column_value_list,\n                p_row_num           =\u003E l_row_num );\n\n            if l_top_label_column_no is not null\n            then\n              -- get the top label\n              l_top_label := \n                 apex_plugin_util.get_value_as_varchar2 (\n                     p_data_type =\u003E l_column_value_list(l_top_label_column_no).data_type,\n                     p_value     =\u003E l_column_value_list(l_top_label_column_no).value_list(l_row_num) );\n\n              apex_json.write(\u0027topLabel\u0027, l_top_label); \n            end if;\n            \n            -- get the value\n            l_value := apex_plugin_util.get_value_as_varchar2 (\n                               p_data_type =\u003E l_column_value_list(l_value_column_no).data_type,\n                               p_value     =\u003E l_column_value_list(l_value_column_no).value_list(l_row_num) );\n\n            apex_json.write(\u0027value\u0027, l_value); \n\n            if l_bottom_label_column_no is not null\n            then\n              -- get the bottom label\n              l_bottom_label := \n                 apex_plugin_util.get_value_as_varchar2 (\n                     p_data_type =\u003E l_column_value_list(l_bottom_label_column_no).data_type,\n                     p_value     =\u003E l_column_value_list(l_bottom_label_column_no).value_list(l_row_num) );\n\n              apex_json.write(\u0027bottomLabel\u0027, l_bottom_label); \n            end if;\n\n            -- get percent\n            if l_percent_column_no is not null then\n                l_percent := l_column_value_list(l_percent_column_no).value_list(l_row_num).number_value;\n                apex_json.    write(\u0027percent\u0027, l_percent); \n            end if;\n\n            -- get the link target if it does exist\n            if c_link_target is not null then\n                l_url := apex_util.prepare_url (\n                             apex_plugin_util.replace_substitutions (\n                                 p_value  =\u003E c_link_target,\n                                 p_escape =\u003E false ));\n                apex_json.    write(\u0027url\u0027, l_url);                \n            end if;\n            \n            apex_json.close_object();        \n\n\n            apex_plugin_util.clear_component_values;\n        exception when others then\n            apex_plugin_util.clear_component_values;\n            raise;\n        end;\n    end loop;\n    apex_json.close_all();\n    \n    return null;\nexception when others then\n    htp.p(\u0027error: \u0027||apex_escape.html(sqlerrm));\n    return null;\nend ajax;\n\n\n"
    }
  }
 ,{
    "id":"18742611970951671781"
   ,"Identification":{
      "Name":"Tag Cloud"
    }
   ,"Source":{
      "PL\/SQL Code":"function render (\n    p_region              in apex_plugin.t_region,\n    p_plugin              in apex_plugin.t_plugin,\n    p_is_printer_friendly in boolean )\n    return apex_plugin.t_region_render_result\nis\n    -- Constants for the columns of our region source query\n    c_tag_col   constant pls_integer := 1;\n    c_count_col constant pls_integer := 2;\n\n    -- attributes of the plug-in\n    l_target_url           varchar2(4000)  := p_region.attribute_01;\n    l_max_display_tags     number          := p_region.attribute_02;\n    l_show_count           boolean         := nvl(p_region.attribute_03,\u0027Y\u0027) = \u0027Y\u0027;\n    l_no_data_found     varchar2(32767) := p_region.no_data_found_message;\n\n    l_valid_data_type_list wwv_flow_global.vc_arr2;\n    l_column_value_list    apex_plugin_util.t_column_value_list2;\n    l_printed_records    number := 0;\n    l_available_records  number := 20;\n    l_max                number;\n    l_min                number;\n    l_total              number := 0;\n    l_cnts               number;\n    l_tag                varchar2(4000);\n\n    l_class_size         number;\n    l_class              varchar2(30);\n\nbegin\n    -- don\u0027t need to load css file, styles are contained within theme_42\n    \n    -- apex_css.add_file (\n    --     p_name      =\u003E \u0027tag_cloud\u0027,\n    --     p_directory =\u003E p_plugin.file_prefix,\n    --     p_version   =\u003E null );\n\n\n    -- define the valid column data types for the region query\n    l_valid_data_type_list(c_tag_col)   := apex_plugin_util.c_data_type_varchar2;\n    l_valid_data_type_list(c_count_col) := apex_plugin_util.c_data_type_number;\n\n    -- get the data to be displayed\n    l_column_value_list := apex_plugin_util.get_data2 (\n                               p_sql_statement  =\u003E p_region.source,\n                               p_min_columns    =\u003E 2,\n                               p_max_columns    =\u003E 2,\n                               p_data_type_list =\u003E l_valid_data_type_list,\n                               p_component_name =\u003E p_region.name );\n\n   l_available_records := l_column_value_list(c_tag_col).value_list.count;\n\n   -----------------------------------------------\n   -- Determine total count and maximum tag counts\n   --\n   l_max := 0;\n   l_min := 1000;\n   FOR i in 1.. l_column_value_list(c_count_col).value_list.count loop\n      l_cnts := l_column_value_list(c_count_col).value_list(i).number_value;\n      l_total := l_total + l_cnts;\n      if l_cnts \u003E l_max then\n         l_max := l_cnts;\n      end if;\n      if l_cnts \u003C l_min then\n         l_min := l_cnts;\n      end if;\n   end loop;\n   if l_max = 0 then l_max := 1; end if;\n\n\n   l_class_size := round((l_max-l_min)\/6);\n\n   ------------------------\n   -- Generate tag cloud --\n   --\n   \n   sys.htp.prn(\u0027\u003Cul class=\"a-TagCloud\"\u003E\u0027);\n\n   for i in 1.. l_column_value_list(c_tag_col).value_list.count loop\n       l_printed_records := l_printed_records + 1;\n       l_tag := apex_escape.html(l_column_value_list(c_tag_col).value_list(i).varchar2_value);\n       l_cnts := l_column_value_list(c_count_col).value_list(i).number_value;\n       if l_cnts \u003C l_min + l_class_size then\n          l_class := \u0027size1\u0027;\n       elsif l_cnts \u003C l_min + (l_class_size*2) then\n          l_class := \u0027size2\u0027;\n       elsif l_cnts \u003C l_min + (l_class_size*3) then\n          l_class := \u0027size3\u0027;\n       elsif l_cnts \u003C l_min + (l_class_size*4) then\n          l_class := \u0027size4\u0027;\n       elsif l_cnts \u003C l_min + (l_class_size*5) then\n          l_class := \u0027size5\u0027;\n       else l_class := \u0027size6\u0027;\n       end if;      \n       \n        sys.htp.prn(\u0027\u003Cli class=\"a-TagCloud-item\"\u003E\u0027\n            ||apex_plugin_util.get_link(\n                p_url  =\u003E replace(l_target_url,\u0027#TAG#\u0027,l_tag),\n                p_text =\u003E l_tag\n                            ||case when l_show_count then\n                                \u0027 \u003Cspan class=\"a-TagCloud-count\"\u003E\u0027||l_cnts||\u0027\u003C\/span\u003E\u0027\n                            end,\n                p_escape_text =\u003E false,\n                p_attributes =\u003E \u0027class=\"a-TagCloud-link a-TagCloud-link--\u0027 ||l_class||\u0027\"\u0027)\n            ||\u0027\u003C\/li\u003E\u0027);\n\n       if  l_printed_records \u003E l_max_display_tags then\n           exit;\n       end if;\n   end loop;\n\n   sys.htp.prn(\u0027\u003C\/ul\u003E\u0027);\n   if l_printed_records = 0 then\n       sys.htp.p(\u0027\u003Cspan class=\"nodatafound\"\u003E\u0027 || l_no_data_found || \u0027\u003C\/span\u003E\u0027);\n   end if;\n\n   return null;\nend render;"
    }
  }
]
